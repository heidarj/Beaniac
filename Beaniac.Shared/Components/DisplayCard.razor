@typeparam TItem where TItem : IDisplayItem

@if(Item is TItem){
<span>
<FluentCard>
    <NavLink Href=@($"/{typeof(TItem).Name.ToLowerInvariant()}/{Item.Id}")>
    <BStack Orientation="Orientation.Vertical"
                    HorizontalAlignment="HorizontalAlignment.Left"
                    VerticalAlignment="VerticalAlignmentValue.SpaceBetween"
                    Height="100%">
        <BStack Height="100%"
                     Orientation="Orientation.Vertical"
                    HorizontalAlignment="HorizontalAlignment.Center"
                    VerticalAlignment="VerticalAlignmentValue.Center">
            @if(!string.IsNullOrWhiteSpace(Item.ImageUrl?.FirstOrDefault()))
            {
                <img src="@Item.ImageUrl?.FirstOrDefault()" style="max-width: 100%; max-height: 100%;" />
            }
            else
            {
                @NoImageContent
            }
        </BStack>
        <BStack Orientation="Orientation.Vertical"
                    HorizontalAlignment="HorizontalAlignment.Left"
                    VerticalAlignment="VerticalAlignmentValue.Center"
                    VerticalGap="5">
            <h4>@Item.Name</h4>
            @ItemTemplate(Item)
        </BStack>
    </BStack>
    </NavLink>
</FluentCard>
</span>
}

@code {
    [Parameter]
    public required TItem Item { get; set; }

    [Parameter]
    public RenderFragment<TItem> ItemTemplate { get; set; } = default!;
    [Parameter]
    public RenderFragment NoImageContent { get; set; } = default!;
}